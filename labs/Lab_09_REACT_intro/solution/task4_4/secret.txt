import React, { useState, useContext, createContext } from "react";

const PostContext = createContext();

const Posts = () => {
  const [posts, setPosts] = useState([
    {
      id: 1,
      name: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –¶–æ–π üê∫",
      text: "–ì–¥–µ –í–î–í –ª–æ–º–∞–µ—Ç –Ω–æ–≥–∏, —Ç–∞–º –ñ–î–í –∫–ª–∞–¥–µ—Ç –¥–æ—Ä–æ–≥–∏!",
      img: "https://sun9-75.userapi.com/impg/PPMf46X-evqHOsSYXswl-Pk4xBxYe5zm4xxStQ/Ra2Nst5LQM8.jpg?size=402x604&quality=95&sign=a9ba1dba691bebb6fb988ea263128f42&c_uniq_tag=889UQnEVM8KeIAM-EOUH2HLXR-SAdsCedzTHj9BCxD4&type=album",
      tags: "–º—É–∑—ã–∫–∞ –æ—Ç–¥—ã—Ö",
      liked: false,
    },
    {
      id: 2,
      name: "–Ø–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞ üê±",
      text: "–ù–µ —É—Å–ø–µ–≤–∞—é —É—Å–ø–µ–≤–∞—Ç—å ü§∑‚Äç‚ôÄÔ∏è",
      img: "https://sun9-77.userapi.com/impg/5tAxLrTk_xkFCqU_J7z5HnhI8CIcYHmYeDoM7Q/rgdbqjebaiA.jpg?size=320x481&quality=95&sign=41370835dfe9a87382e2017c5c403297&c_uniq_tag=dgKwYW2OAmdUCGJMYOrizoZtnFYVfD-Gf6r9mOsALgE&type=album",
      tags: "–æ—Ç–¥—ã—Ö",
      liked: false,
    },
    {
      id: 3,
      name: "–í–∏–∫—Ç–æ—Ä –¶–æ–π üé∏üî•",
      text: "–ì—Ä—É–ø–ø–∞ –∫—Ä–æ–≤–∏ ‚Äì –Ω–∞ —Ä—É–∫–∞–≤–µ,\
      \n–ú–æ–π –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä ‚Äì –Ω–∞ —Ä—É–∫–∞–≤–µ,\
      \n–ü–æ–∂–µ–ª–∞–π –º–Ω–µ —É–¥–∞—á–∏ –≤ –±–æ—é,\
      \n–ü–æ–∂–µ–ª–∞–π –º–Ω–µ:\
      \n–ù–µ –æ—Å—Ç–∞—Ç—å—Å—è –≤ —ç—Ç–æ–π —Ç—Ä–∞–≤–µ,\
      \n–ù–µ –æ—Å—Ç–∞—Ç—å—Å—è –≤ —ç—Ç–æ–π —Ç—Ä–∞–≤–µ.\
      \n–ü–æ–∂–µ–ª–∞–π –º–Ω–µ —É–¥–∞—á–∏,\
      \n–ü–æ–∂–µ–ª–∞–π –º–Ω–µ —É–¥–∞—á–∏!",
      img: "https://sun9-26.userapi.com/impg/lwVJukPHKAi4GJdFeQlCp_VHzVI-rB6OMB4kgg/KJyKIPLAMpk.jpg?size=873x1080&quality=96&sign=f535e49a47244cff8f0bbb0f09322cc0&type=album",
      tags: "–º—É–∑—ã–∫–∞",
      liked: false,
    },
  ]);

  // –ù–∞–∂–∏—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –õ–∞–π–∫–∞ –¥–ª—è –ø–æ—Å—Ç–∞
  const handleLike = (id) => {
    setPosts(
      posts.map((post) =>
        post.id === id ? { ...post, liked: !post.liked } : post
      )
    );
  };

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞ —Å –ø—É—Å—Ç—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
  const [newPost, setNewPost] = useState({
    id: null,
    name: "",
    text: "",
    img: "",
    tags: "",
    liked: false,
  });

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞ –µ—Å–ª–∏ –µ—Å—Ç—å '–∏–º—è –∏ —Ç–µ–∫—Å—Ç' –∏–ª–∏ '–∏–º—è –∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞'
  const handleAddPost = () => {
    if ((newPost.name && newPost.text) || (newPost.name && newPost.img)) {
      setPosts([...posts, { ...newPost, id: posts.length + 1 }]);
      setNewPost({
        id: null,
        name: "",
        text: "",
        img: "",
        tags: "",
        liked: false,
      });
    }
  };

  // –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–∞ –ø–æ –∫–Ω–æ–ø–∫–µ
  const handleDeletePost = (id) => {
    setPosts(posts.filter((post) => post.id !== id));
  };

  // –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–µ–≥–æ–≤ –∏–∑ –≤—Å–µ—Ö –ø–æ—Å—Ç–æ–≤
  const allTags = [
    ...new Set(
      posts
        // –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ —Ç–µ–≥–æ–≤ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ç–µ–≥–∏ —Å –ø–æ–º–æ—â—å—é —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è ','
        .map((post) => post.tags.split(/[ ,]+/))
        // –ü–æ–ª—É—á–∞–µ–º –æ–¥–Ω–æ–º–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤ —Ç–µ–≥–æ–≤
        .flat()
        // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –ø–µ—Ä–µ–¥ –∏ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Ç–µ–≥–∞
        .map((tag) => tag.trim())
        // –£–¥–∞–ª–∏—Ç—å –ø—É—Å—Ç—ã–µ —Ç–µ–≥–∏, –µ—Å–ª–∏ –µ—Å—Ç—å
        .filter((tag) => tag !== "")
        // –î–æ–±–∞–≤–∏—Ç—å "#" –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º —Ç–µ–≥–æ–º –∏ –ø—Ä–∏–≤–µ—Å—Ç–∏ –≤—Å–µ —Ç–µ–≥–∏ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
        .map((tag) => "#" + tag.toLowerCase())
    ),
  ];

  // –°–æ–∑–¥–∞–π—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–µ–≥–æ–≤
  const [selectedTags, setSelectedTags] = useState([]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–∞ –ø–æ —Ç–µ–≥—É
  const handleTagClick = (tag) => {
    if (selectedTags.includes(tag)) {
      setSelectedTags(selectedTags.filter((t) => t !== tag));
    } else {
      setSelectedTags([...selectedTags, tag]);
    }
  };

  return (
    <>
      <PostContext.Provider value={allTags}>
        {/* –í–µ—Å—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä */}
        <div
          className="container"
          style={{ minWidth: "420px", maxWidth: "500px" }}
        >
          {/* –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞ */}
          <div className="card mb-3 bg-light shadow">
            <div className="card-body">
              <h3 className="card-title mb-3">–ù–æ–≤—ã–π –ø–æ—Å—Ç</h3>
              <div className="mb-3">
                <label htmlFor="name" className="form-label">
                  –ò–º—è
                </label>
                <input
                  type="text"
                  className="form-control"
                  id="name"
                  value={newPost.name}
                  onChange={(e) =>
                    setNewPost({ ...newPost, name: e.target.value })
                  }
                />
              </div>
              <div className="mb-3">
                <label htmlFor="text" className="form-label">
                  –¢–µ–∫—Å—Ç
                </label>
                <textarea
                  className="form-control"
                  id="text"
                  value={newPost.text}
                  onChange={(e) =>
                    setNewPost({ ...newPost, text: e.target.value })
                  }
                />
              </div>
              <div className="mb-3">
                <label htmlFor="img" className="form-label">
                  –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (c—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ)
                </label>
                <input
                  type="text"
                  className="form-control"
                  id="img"
                  value={newPost.img}
                  onChange={(e) =>
                    setNewPost({ ...newPost, img: e.target.value })
                  }
                />
              </div>
              <div className="mb-3">
                <label htmlFor="tags" className="form-label">
                  –¢–µ–≥
                </label>
                <input
                  type="text"
                  className="form-control"
                  id="tags"
                  value={newPost.tags}
                  onChange={(e) =>
                    setNewPost({ ...newPost, tags: e.target.value })
                  }
                />
              </div>
              <button
                className="btn btn-primary bg-gradient"
                onClick={handleAddPost}
              >
                –î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç
              </button>
            </div>
          </div>
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –µ—Å—Ç—å –ª–∏ –ù–æ–≤–æ—Å—Ç–∏ */}
          <h1>
            <span
              className={
                "badge mt-5 mb-3 shadow  bg-gradient bg-" +
                (posts.length > 0 ? "primary" : "danger")
              }
            >
              {posts.length > 0 ? "–ù–æ–≤–æ—Å—Ç–∏" : "–ù–æ–≤–æ—Å—Ç–µ–π –Ω–µ—Ç"}
            </span>
          </h1>
          {/* –í—ã–≤–æ–¥ –≤—Å–µ—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–µ–≥–æ–≤ —Å–æ –≤—Å–µ—Ö –ø–æ—Å—Ç–æ–≤ */}
          <div>
            {allTags.map((tag) => (
              <button
                key={tag}
                className={`btn p-2 m-2 bg-gradient shadow-sm ${
                  selectedTags.includes(tag)
                    ? "bg-warning"
                    : "bg-primary-subtle"
                }`}
                onClick={() => handleTagClick(tag)}
              >
                {tag}
              </button>
            ))}
          </div>
          {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ—Å—Ç–æ–≤ */}
          {posts
            .filter(
              (post) =>
                selectedTags.length === 0 ||
                selectedTags.every((tag) =>
                  post.tags.toLowerCase().split(/[ ,]+/).includes(tag.substr(1))
                )
            )
            .map((post) => (
              <div key={post.id} className="card mb-3 bg-light shadow">
                <div className="card-body">
                  <h3 className="card-title mb-3">
                    {post.name}{" "}
                    {post.tags && `#${post.tags.split(/[ ,]+/).join(" #")}`}
                  </h3>
                  {post.img && (
                    <img
                      src={post.img}
                      className="card-img mb-2 shadow"
                      style={{ width: "360px", height: "auto" }}
                      alt="image"
                    />
                  )}
                  <p className="card-text" style={{ whiteSpace: "pre-wrap" }}>
                    {post.text}
                  </p>
                  <button
                    className={
                      "btn rounded-pill btn-" +
                      (post.liked ? "danger " : "outline-primary")
                    }
                    onClick={() => handleLike(post.id)}
                  >
                    {post.liked ? (
                      <svg
                        width="16"
                        height="16"
                        fill="currentColor"
                        class="bi bi-suit-heart-fill"
                        viewBox="0 0 16 16"
                      >
                        <path d="M4 1c2.21 0 4 1.755 4 3.92C8 2.755 9.79 1 12 1s4 1.755 4 3.92c0 3.263-3.234 4.414-7.608 9.608a.513.513 0 0 1-.784 0C3.234 9.334 0 8.183 0 4.92 0 2.755 1.79 1 4 1" />
                      </svg>
                    ) : (
                      <svg
                        width="16"
                        height="16"
                        fill="currentColor"
                        class="bi bi-suit-heart"
                        viewBox="0 0 16 16"
                      >
                        <path d="m8 6.236-.894-1.789c-.222-.443-.607-1.08-1.152-1.595C5.418 2.345 4.776 2 4 2 2.324 2 1 3.326 1 4.92c0 1.211.554 2.066 1.868 3.37.337.334.721.695 1.146 1.093C5.122 10.423 6.5 11.717 8 13.447c1.5-1.73 2.878-3.024 3.986-4.064.425-.398.81-.76 1.146-1.093C14.446 6.986 15 6.131 15 4.92 15 3.326 13.676 2 12 2c-.777 0-1.418.345-1.954.852-.545.515-.93 1.152-1.152 1.595zm.392 8.292a.513.513 0 0 1-.784 0c-1.601-1.902-3.05-3.262-4.243-4.381C1.3 8.208 0 6.989 0 4.92 0 2.755 1.79 1 4 1c1.6 0 2.719 1.05 3.404 2.008.26.365.458.716.596.992a7.55 7.55 0 0 1 .596-.992C9.281 2.049 10.4 1 12 1c2.21 0 4 1.755 4 3.92 0 2.069-1.3 3.288-3.365 5.227-1.193 1.12-2.642 2.48-4.243 4.38z" />
                      </svg>
                    )}
                  </button>
                  <button
                    className="btn btn-outline-danger mx-5 rounded-pill position-relative"
                    onClick={() => handleDeletePost(post.id)}
                  >
                    <svg
                      width="16"
                      height="16"
                      fill="currentColor"
                      class="bi bi-person-x-fill"
                      viewBox="0 0 16 16"
                    >
                      <path
                        fill-rule="evenodd"
                        d="M1 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6m6.146-2.854a.5.5 0 0 1 .708 0L14 6.293l1.146-1.147a.5.5 0 0 1 .708.708L14.707 7l1.147 1.146a.5.5 0 0 1-.708.708L14 7.707l-1.146 1.147a.5.5 0 0 1-.708-.708L13.293 7l-1.147-1.146a.5.5 0 0 1 0-.708z"
                      />
                    </svg>
                  </button>
                </div>
              </div>
            ))}
        </div>
      </PostContext.Provider>
    </>
  );
};

const App = () => {
  return <Posts />;
};

export default App;
